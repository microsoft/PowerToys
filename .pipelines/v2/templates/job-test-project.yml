parameters:
  - name: configuration
    type: string
    default: "Release"
  - name: platform
    type: string
    default: ""
  - name: inputArtifactStem
    type: string
    default: ""

jobs:
- job: Test${{ parameters.platform }}${{ parameters.configuration }}
  displayName: Test ${{ parameters.platform }} ${{ parameters.configuration }}
  variables:
    BuildPlatform: ${{ parameters.platform }}
    BuildConfiguration: ${{ parameters.configuration }}
    SrcPath: $(Build.Repository.LocalPath)
  pool:
    ${{ if eq(variables['System.CollectionId'], 'cb55739e-4afe-46a3-970f-1b49d8ee7564') }}:
      ${{ if ne(parameters.platform, 'ARM64') }}:
        name: SHINE-INT-Testing-x64
      ${{ else }}:
        name: SHINE-INT-Testing-arm64
    ${{ else }}:
      ${{ if ne(parameters.platform, 'ARM64') }}:
        name: SHINE-OSS-Testing-x64
      ${{ else }}:
        name: SHINE-OSS-Testing-arm64
  steps:
  - checkout: self
    submodules: false
    clean: true
    fetchDepth: 1
    fetchTags: false

  - download: current
    displayName: Download artifacts
    artifact: build-${{ parameters.platform }}-${{ parameters.configuration }}${{ parameters.inputArtifactStem }}
    patterns: |-
      **
      !**\*.pdb
      !**\*.lib

  - template: steps-ensure-dotnet-version.yml
    parameters:
      sdk: true
      version: '9.0'

  - task: VisualStudioTestPlatformInstaller@1
    displayName: Ensure VSTest Platform

  - pwsh: |-
      & '$(build.sourcesdirectory)\.pipelines\InstallWinAppDriver.ps1'
    displayName: Download and install WinAppDriver

  - ${{ if ne(parameters.platform, 'arm64') }}:
    - task: ScreenResolutionUtility@1
      inputs:
        displaySettings: 'optimal'

  - task: VSTest@3
    displayName: Run UI Tests
    inputs:
      platform: '$(BuildPlatform)'
      configuration: '$(BuildConfiguration)'
      testSelector: 'testAssemblies'
      searchFolder: '$(Pipeline.Workspace)\build-${{ parameters.platform }}-${{ parameters.configuration }}${{ parameters.inputArtifactStem }}'
      vsTestVersion: 'toolsInstaller'
      uiTests: true
      rerunFailedTests: true
      testAssemblyVer2: |
        **\UITests-FancyZones.dll
        **\UITests-FancyZonesEditor.dll
        !**\obj\**
        !**\ref\**
