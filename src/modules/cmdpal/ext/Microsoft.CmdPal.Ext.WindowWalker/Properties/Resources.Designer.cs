//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.CmdPal.Ext.WindowWalker.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.CmdPal.Ext.WindowWalker.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch to.
        /// </summary>
        public static string switch_to_command_title {
            get {
                return ResourceManager.GetString("switch_to_command_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On all Desktops.
        /// </summary>
        public static string VirtualDesktopHelper_AllDesktops {
            get {
                return ResourceManager.GetString("VirtualDesktopHelper_AllDesktops", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desktop {0}.
        /// </summary>
        public static string VirtualDesktopHelper_Desktop {
            get {
                return ResourceManager.GetString("VirtualDesktopHelper_Desktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch between open windows.
        /// </summary>
        public static string window_walker_top_level_command_title {
            get {
                return ResourceManager.GetString("window_walker_top_level_command_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close window.
        /// </summary>
        public static string windowwalker_Close {
            get {
                return ResourceManager.GetString("windowwalker_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desktop.
        /// </summary>
        public static string windowwalker_Desktop {
            get {
                return ResourceManager.GetString("windowwalker_Desktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder windows do not run in separate processes. (Click to open Explorer properties.).
        /// </summary>
        public static string windowwalker_ExplorerInfoSubTitle {
            get {
                return ResourceManager.GetString("windowwalker_ExplorerInfoSubTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Info: Killing the Explorer process isn&apos;t possible..
        /// </summary>
        public static string windowwalker_ExplorerInfoTitle {
            get {
                return ResourceManager.GetString("windowwalker_ExplorerInfoTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kill process.
        /// </summary>
        public static string windowwalker_Kill {
            get {
                return ResourceManager.GetString("windowwalker_Kill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your are going to kill the following process:.
        /// </summary>
        public static string windowwalker_KillMessage {
            get {
                return ResourceManager.GetString("windowwalker_KillMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue?.
        /// </summary>
        public static string windowwalker_KillMessageQuestion {
            get {
                return ResourceManager.GetString("windowwalker_KillMessageQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kill process confirmation.
        /// </summary>
        public static string windowwalker_KillMessageTitle {
            get {
                return ResourceManager.GetString("windowwalker_KillMessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because this is an app process, all instances of the app will be killed. Continue?.
        /// </summary>
        public static string windowwalker_KillMessageUwp {
            get {
                return ResourceManager.GetString("windowwalker_KillMessageUwp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Window Walker.
        /// </summary>
        public static string windowwalker_name {
            get {
                return ResourceManager.GetString("windowwalker_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Responding.
        /// </summary>
        public static string windowwalker_NotResponding {
            get {
                return ResourceManager.GetString("windowwalker_NotResponding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No..
        /// </summary>
        public static string windowwalker_Number {
            get {
                return ResourceManager.GetString("windowwalker_Number", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pid.
        /// </summary>
        public static string windowwalker_pid {
            get {
                return ResourceManager.GetString("windowwalker_pid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search open windows....
        /// </summary>
        public static string windowwalker_PlaceholderText {
            get {
                return ResourceManager.GetString("windowwalker_PlaceholderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switches between open windows.
        /// </summary>
        public static string windowwalker_plugin_description {
            get {
                return ResourceManager.GetString("windowwalker_plugin_description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process name.
        /// </summary>
        public static string windowwalker_Process {
            get {
                return ResourceManager.GetString("windowwalker_Process", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process id.
        /// </summary>
        public static string windowwalker_ProcessId {
            get {
                return ResourceManager.GetString("windowwalker_ProcessId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running.
        /// </summary>
        public static string windowwalker_Running {
            get {
                return ResourceManager.GetString("windowwalker_Running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request confirmation when killing a process.
        /// </summary>
        public static string windowwalker_SettingConfirmKillProcess {
            get {
                return ResourceManager.GetString("windowwalker_SettingConfirmKillProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide Explorer process information.
        /// </summary>
        public static string windowwalker_SettingExplorerSettingInfo {
            get {
                return ResourceManager.GetString("windowwalker_SettingExplorerSettingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is an optional message that informs users about explorer behavior.
        /// </summary>
        public static string windowwalker_SettingExplorerSettingInfo_Description {
            get {
                return ResourceManager.GetString("windowwalker_SettingExplorerSettingInfo_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide &quot;kill process&quot; button if additional permissions required.
        /// </summary>
        public static string windowwalker_SettingHideKillProcess {
            get {
                return ResourceManager.GetString("windowwalker_SettingHideKillProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show windows in most-recently-used order.
        /// </summary>
        public static string windowwalker_SettingInMruOrder {
            get {
                return ResourceManager.GetString("windowwalker_SettingInMruOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When disabled, windows will be sorted by title.
        /// </summary>
        public static string windowwalker_SettingInMruOrder_Description {
            get {
                return ResourceManager.GetString("windowwalker_SettingInMruOrder_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kill process and its child processes.
        /// </summary>
        public static string windowwalker_SettingKillProcessTree {
            get {
                return ResourceManager.GetString("windowwalker_SettingKillProcessTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Be careful when activating this. Killing the whole process tree can lead to problematic application crashes..
        /// </summary>
        public static string windowwalker_SettingKillProcessTree_Description {
            get {
                return ResourceManager.GetString("windowwalker_SettingKillProcessTree_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stay open after closing windows and killing processes.
        /// </summary>
        public static string windowwalker_SettingOpenAfterKillAndClose {
            get {
                return ResourceManager.GetString("windowwalker_SettingOpenAfterKillAndClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature won&apos;t work if the kill process confirmation is enabled..
        /// </summary>
        public static string windowwalker_SettingOpenAfterKillAndClose_Description {
            get {
                return ResourceManager.GetString("windowwalker_SettingOpenAfterKillAndClose_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show only results from visible desktop.
        /// </summary>
        public static string windowwalker_SettingResultsVisibleDesktop {
            get {
                return ResourceManager.GetString("windowwalker_SettingResultsVisibleDesktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string windowwalker_settings_name {
            get {
                return ResourceManager.GetString("windowwalker_settings_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This information is only shown in subtitle and tool tip, if you have at least two desktops..
        /// </summary>
        public static string windowwalker_SettingSubtitleDesktopName_Description {
            get {
                return ResourceManager.GetString("windowwalker_SettingSubtitleDesktopName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show desktop as a tag on the list item.
        /// </summary>
        public static string windowwalker_SettingTagDesktopName {
            get {
                return ResourceManager.GetString("windowwalker_SettingTagDesktopName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show process id as a tag on the list item.
        /// </summary>
        public static string windowwalker_SettingTagPid {
            get {
                return ResourceManager.GetString("windowwalker_SettingTagPid", resourceCulture);
            }
        }
    }
}
