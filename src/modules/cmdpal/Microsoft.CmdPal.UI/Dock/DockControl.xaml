<?xml version="1.0" encoding="utf-8" ?>
<UserControl
    x:Class="Microsoft.CmdPal.UI.Dock.DockControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:coreVm="using:Microsoft.CmdPal.Core.ViewModels"
    xmlns:cpcontrols="using:Microsoft.CmdPal.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dockVm="using:Microsoft.CmdPal.UI.ViewModels.Dock"
    xmlns:help="using:Microsoft.CmdPal.UI.Helpers"
    xmlns:local="using:Microsoft.CmdPal.UI.Dock"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <StackLayout
                x:Key="ItemsOrientation"
                Orientation="{x:Bind ItemsOrientation, Mode=OneWay}"
                Spacing="4" />

            <Style x:Key="ResizingIconStyle" TargetType="cpcontrols:IconBox">
                <Setter Property="Height" Value="{x:Bind IconSize, Mode=OneWay}" />
                <Setter Property="MaxWidth" Value="{x:Bind IconSize, Mode=OneWay}" />
                <Setter Property="MinWidth" Value="{x:Bind IconMinWidth, Mode=OneWay}" />
            </Style>
            <Style x:Key="ResizingTitleTextBlock" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{x:Bind TitleTextFontSize, Mode=OneWay}" />
                <Setter Property="MaxWidth" Value="{x:Bind TitleTextMaxWidth, Mode=OneWay}" />
            </Style>

            <local:IconInfoVisibilityConverter x:Key="IconInfoVisibilityConverter" />
            <DataTemplate x:Key="CommandButtonTemplate" x:DataType="coreVm:CommandViewModel">
                <Button MaxHeight="32" Padding="4">
                    <!--  TODO! Command="{x:Bind InvokeCommand, Mode=OneWay}"  -->
                    <Grid
                        AutomationProperties.Name="{x:Bind Name, Mode=OneWay}"
                        Background="Transparent"
                        ColumnSpacing="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <StackPanel
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            Orientation="Vertical"
                            Visibility="{x:Bind HasIcon, Mode=OneWay}">
                            <cpcontrols:IconBox
                                x:Name="IconBorder"
                                Width="16"
                                Height="16"
                                VerticalAlignment="Center"
                                AutomationProperties.AccessibilityView="Raw"
                                Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                SourceKey="{x:Bind Icon, Mode=OneWay}"
                                SourceRequested="{x:Bind help:IconCacheProvider.SourceRequested}" />
                        </StackPanel>
                        <StackPanel
                            Grid.Column="1"
                            Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            Orientation="Vertical"
                            Visibility="{x:Bind Name, Mode=OneWay, Converter={StaticResource StringNotEmptyToVisibilityConverter}}">
                            <TextBlock
                                x:Name="TitleTextBlock"
                                MaxWidth="200"
                                MaxHeight="40"
                                Margin="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="14"
                                Foreground="{ThemeResource TextFillColorPrimary}"
                                Text="{x:Bind Name, Mode=OneWay}"
                                TextAlignment="Left"
                                TextTrimming="WordEllipsis"
                                TextWrapping="NoWrap" />
                        </StackPanel>
                    </Grid>
                </Button>
            </DataTemplate>

            <DataTemplate x:Key="DeskbandTemplate" x:DataType="dockVm:DockItemViewModel">
                <Button
                    VerticalAlignment="Stretch"
                    DataContext="{x:Bind}"
                    RightTapped="BandItem_RightTapped"
                    Style="{StaticResource TaskBarButtonStyle}"
                    Tapped="BandItem_Tapped"
                    ToolTipService.ToolTip="{x:Bind Title, Mode=OneWay}">

                    <Grid AutomationProperties.Name="{x:Bind Title, Mode=OneWay}" Background="Transparent">
                        <!--  Visibility="{x:Bind ShouldBeVisible, Mode=OneWay}">  -->
                        <!--  TODO! ShouldBeVisible is a bad hack, we don't want that for the visibility of a band  -->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <StackPanel
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Orientation="Vertical"
                            Visibility="{x:Bind Icon, Converter={StaticResource IconInfoVisibilityConverter}, Mode=OneWay}">
                            <cpcontrols:IconBox
                                x:Name="IconBorder"
                                VerticalAlignment="Center"
                                AutomationProperties.AccessibilityView="Raw"
                                Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                SourceKey="{x:Bind Icon, Mode=OneWay}"
                                SourceRequested="{x:Bind help:IconCacheProvider.SourceRequested}"
                                Style="{StaticResource ResizingIconStyle}" />
                        </StackPanel>
                        <StackPanel
                            Grid.Column="1"
                            Margin="8,0,8,0"
                            VerticalAlignment="Center"
                            Visibility="{x:Bind HasText, Mode=OneWay}">
                            <TextBlock
                                x:Name="TitleTextBlock"
                                Margin="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="12"
                                Style="{StaticResource ResizingTitleTextBlock}"
                                Text="{x:Bind Title, Mode=OneWay}"
                                TextAlignment="Left"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap" />
                            <TextBlock
                                x:Name="SubTitleTextBlock"
                                MaxWidth="100"
                                Margin="0,-4,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                FontSize="10"
                                Foreground="{ThemeResource TextFillColorTertiary}"
                                Text="{x:Bind Subtitle, Mode=OneWay}"
                                TextAlignment="Center"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap"
                                Visibility="{x:Bind Subtitle, Mode=OneWay, Converter={StaticResource StringNotEmptyToVisibilityConverter}}" />
                        </StackPanel>
                    </Grid>

                    <!--<Button.ContextFlyout>-->
                    <!--<Flyout Placement="TopEdgeAlignedLeft" ShouldConstrainToRootBounds="False">-->
                    <!--  More correctly, this ItemsControl should be a list view, but i ain't got time to write more templates  -->
                    <!--<ItemsControl
                                x:Name="ItemsFlyout"
                                Grid.Column="0"
                                MinWidth="200"
                                MaxWidth="380"
                                Margin="-8"
                                Padding="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Background="Blue"
                                BorderBrush="Blue"
                                BorderThickness="1"
                                IsTabStop="False"
                                ItemTemplate="{StaticResource DeskbandTemplate}"
                                ItemsSource="{x:Bind ContextMenu, Mode=OneWay}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel
                                            HorizontalAlignment="Left"
                                            Orientation="Vertical"
                                            Spacing="4" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>-->
                    <!--<ListView
                                MinWidth="200"
                                MaxWidth="380"
                                Margin="-8"
                                Padding="-8"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                BorderThickness="1"
                                IsTabStop="False"
                                ItemTemplate="{StaticResource DeskbandTemplate}"
                                ItemsSource="{x:Bind ContextMenu, Mode=OneWay}" />-->
                    <!--</Flyout>-->

                    <!--</Button.ContextFlyout>-->
                </Button>
            </DataTemplate>

            <DataTemplate x:Key="DockBandTemplate" x:DataType="dockVm:DockBandViewModel">
                <ItemsRepeater
                    HorizontalAlignment="Center"
                    ItemTemplate="{StaticResource DeskbandTemplate}"
                    ItemsSource="{x:Bind Items, Mode=OneWay}"
                    Layout="{StaticResource ItemsOrientation}">
                    <ItemsRepeater.Transitions>
                        <TransitionCollection />
                    </ItemsRepeater.Transitions>
                </ItemsRepeater>
            </DataTemplate>

            <Style
                x:Name="ContextMenuFlyoutStyle"
                BasedOn="{StaticResource DefaultFlyoutPresenterStyle}"
                TargetType="FlyoutPresenter">
                <Style.Setters>
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Background" Value="{ThemeResource DesktopAcrylicTransparentBrush}" />
                    <Setter Property="BorderBrush" Value="{ThemeResource DividerStrokeColorDefaultBrush}" />
                </Style.Setters>
            </Style>

            <!--  Backdrop requires ShouldConstrainToRootBounds="False"  -->
            <Flyout
                x:Name="ContextMenuFlyout"
                FlyoutPresenterStyle="{StaticResource ContextMenuFlyoutStyle}"
                Opened="ContextMenuFlyout_Opened"
                ShouldConstrainToRootBounds="False"
                SystemBackdrop="{ThemeResource AcrylicBackgroundFillColorDefaultBackdrop}">
                <cpcontrols:ContextMenu x:Name="ContextControl" />
            </Flyout>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid
        x:Name="RootGrid"
        BorderBrush="{ThemeResource SurfaceStrokeColorDefaultBrush}"
        BorderThickness="0,0,0,1">
        <Grid x:Name="ContentGrid" Padding="0,5,0,3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition x:Name="SearchColumn" Width="Auto" />
                <ColumnDefinition x:Name="EndColumn" Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*" />
                <RowDefinition x:Name="SearchRow" Height="Auto" />
                <RowDefinition x:Name="EndRow" Height="Auto" />
            </Grid.RowDefinitions>

            <ScrollViewer
                x:Name="StartItemsView"
                Grid.Column="0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                HorizontalScrollBarVisibility="Hidden"
                HorizontalScrollMode="Enabled"
                VerticalScrollBarVisibility="Auto"
                VerticalScrollMode="Disabled">
                <ItemsRepeater
                    x:Name="StartItemsRepeater"
                    HorizontalAlignment="Left"
                    ItemTemplate="{StaticResource DockBandTemplate}"
                    ItemsSource="{x:Bind ViewModel.StartItems, Mode=OneWay}"
                    Layout="{StaticResource ItemsOrientation}">

                    <!--<ItemsRepeater.Layout>
                    <StackLayout Orientation="{x:Bind ItemsOrientation}" Spacing="4" />
                </ItemsRepeater.Layout>-->

                    <ItemsRepeater.Transitions>
                        <TransitionCollection />
                    </ItemsRepeater.Transitions>
                </ItemsRepeater>
            </ScrollViewer>

            <!--<Button
            x:Name="SearchButton"
            Grid.Column="1"
            Height="24"
            Margin="0,8"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Left"
            AllowFocusOnInteraction="True"
            BorderBrush="{ThemeResource TextBoxButtonBorderThemeBrush}"
            Command="{x:Bind SearchOpenCmdPalCommand, Mode=OneWay}"
            CornerRadius="12"
            FontSize="8"
            Visibility="{x:Bind ShowSearchButton, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <TextBlock HorizontalAlignment="Left" Foreground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}">Search...</TextBlock>
        </Button>-->

            <ItemsRepeater
                x:Name="EndItemsRepeater"
                Grid.Column="2"
                ItemTemplate="{StaticResource DockBandTemplate}"
                ItemsSource="{x:Bind ViewModel.EndItems, Mode=OneWay}"
                Layout="{StaticResource ItemsOrientation}">
                <!--<ItemsRepeater.Layout>
                <StackLayout Orientation="{x:Bind ItemsOrientation}" Spacing="4" />
            </ItemsRepeater.Layout>-->
                <ItemsRepeater.Transitions>
                    <TransitionCollection />
                </ItemsRepeater.Transitions>
            </ItemsRepeater>
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="DockOrientation">
                <VisualState x:Name="DockOnTop">
                    <VisualState.StateTriggers>
                        <ui:IsEqualStateTrigger Value="{x:Bind DockSide, Mode=OneWay}" To="Top" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StartItemsView.(Grid.Row)" Value="0" />
                        <Setter Target="StartItemsView.(Grid.Column)" Value="0" />
                        <Setter Target="StartItemsView.(Grid.RowSpan)" Value="3" />
                        <Setter Target="StartItemsView.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="EndItemsRepeater.(Grid.Row)" Value="0" />
                        <Setter Target="EndItemsRepeater.(Grid.Column)" Value="3" />
                        <Setter Target="EndItemsRepeater.(Grid.RowSpan)" Value="3" />
                        <Setter Target="EndItemsRepeater.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="EndItemsRepeater.HorizontalAlignment" Value="Right" />
                        <Setter Target="ContentGrid.Margin" Value="8,0,8,0" />
                        <Setter Target="RootGrid.BorderThickness" Value="0,0,0,1" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DockOnBottom">
                    <VisualState.StateTriggers>
                        <ui:IsEqualStateTrigger Value="{x:Bind DockSide, Mode=OneWay}" To="Bottom" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StartItemsView.(Grid.Row)" Value="0" />
                        <Setter Target="StartItemsView.(Grid.Column)" Value="0" />
                        <Setter Target="StartItemsView.(Grid.RowSpan)" Value="3" />
                        <Setter Target="StartItemsView.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="EndItemsRepeater.(Grid.Row)" Value="0" />
                        <Setter Target="EndItemsRepeater.(Grid.Column)" Value="3" />
                        <Setter Target="EndItemsRepeater.(Grid.RowSpan)" Value="3" />
                        <Setter Target="EndItemsRepeater.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="EndItemsRepeater.HorizontalAlignment" Value="Right" />
                        <Setter Target="ContentGrid.Margin" Value="8,0,8,0" />
                        <Setter Target="RootGrid.BorderThickness" Value="0,1,0,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DockOnLeft">
                    <VisualState.StateTriggers>
                        <ui:IsEqualStateTrigger Value="{x:Bind DockSide, Mode=OneWay}" To="Left" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StartItemsView.(Grid.Row)" Value="0" />
                        <Setter Target="StartItemsView.(Grid.Column)" Value="0" />
                        <Setter Target="StartItemsView.(Grid.RowSpan)" Value="1" />
                        <Setter Target="StartItemsView.(Grid.ColumnSpan)" Value="3" />
                        <Setter Target="EndItemsRepeater.(Grid.Row)" Value="3" />
                        <Setter Target="EndItemsRepeater.(Grid.Column)" Value="0" />
                        <Setter Target="EndItemsRepeater.(Grid.RowSpan)" Value="1" />
                        <Setter Target="EndItemsRepeater.(Grid.ColumnSpan)" Value="3" />
                        <Setter Target="EndItemsRepeater.HorizontalAlignment" Value="Stretch" />
                        <Setter Target="ContentGrid.Padding" Value="8,8,8,8" />
                        <Setter Target="RootGrid.BorderThickness" Value="0,0,1,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DockOnRight">
                    <VisualState.StateTriggers>
                        <ui:IsEqualStateTrigger Value="{x:Bind DockSide, Mode=OneWay}" To="Right" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StartItemsView.(Grid.Row)" Value="0" />
                        <Setter Target="StartItemsView.(Grid.Column)" Value="0" />
                        <Setter Target="StartItemsView.(Grid.RowSpan)" Value="1" />
                        <Setter Target="StartItemsView.(Grid.ColumnSpan)" Value="3" />
                        <Setter Target="EndItemsRepeater.(Grid.Row)" Value="3" />
                        <Setter Target="EndItemsRepeater.(Grid.Column)" Value="0" />
                        <Setter Target="EndItemsRepeater.(Grid.RowSpan)" Value="1" />
                        <Setter Target="EndItemsRepeater.(Grid.ColumnSpan)" Value="3" />
                        <Setter Target="EndItemsRepeater.HorizontalAlignment" Value="Stretch" />
                        <Setter Target="ContentGrid.Padding" Value="8,8,8,8" />
                        <Setter Target="RootGrid.BorderThickness" Value="1,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>