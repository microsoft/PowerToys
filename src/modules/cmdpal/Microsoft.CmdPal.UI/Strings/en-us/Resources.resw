<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppName" xml:space="preserve">
    <value>Command Palette</value>
    <comment>{Locked=qps-ploc,qps-ploca,qps-plocm}</comment>
  </data>
  <data name="AppNameDev" xml:space="preserve">
    <value>Command Palette Dev</value>
    <comment>{Locked} The dev build will never be seen in multiple languages</comment>
  </data>
  <data name="AppNameCan" xml:space="preserve">
    <value>Command Palette Canary</value>
    <comment>{Locked=qps-ploc,qps-ploca,qps-plocm}</comment>
  </data>
  <data name="AppNamePre" xml:space="preserve">
    <value>Command Palette Preview</value>
    <comment>{Locked=qps-ploc,qps-ploca,qps-plocm}</comment>
  </data>
  <data name="AppStoreName" xml:space="preserve">
    <value>Windows Command Palette</value>
    <comment>{Locked=qps-ploc,qps-ploca,qps-plocm}</comment>
  </data>
  <data name="AppStoreNameDev" xml:space="preserve">
    <value>Windows Command Palette Dev</value>
    <comment>{Locked} The dev build will never be seen in multiple languages</comment>
  </data>
  <data name="AppStoreNameCan" xml:space="preserve">
    <value>Windows Command Palette Canary</value>
    <comment>{Locked=qps-ploc,qps-ploca,qps-plocm}. "Canary" in this context means an unstable or nightly build of a software product, not the bird.</comment>
  </data>
  <data name="AppStoreNamePre" xml:space="preserve">
    <value>Windows Command Palette Preview</value>
    <comment>{Locked=qps-ploc,qps-ploca,qps-plocm}</comment>
  </data>
  <data name="AppShortName" xml:space="preserve">
    <value>Command Palette</value>
    <comment>{Locked=qps-ploc,qps-ploca,qps-plocm}</comment>
  </data>
  <data name="AppShortNameDev" xml:space="preserve">
    <value>Command Palette Dev</value>
    <comment>{Locked} The dev build will never be seen in multiple languages</comment>
  </data>
  <data name="AppShortNameCan" xml:space="preserve">
    <value>Command Palette Canary</value>
    <comment>{Locked=qps-ploc,qps-ploca,qps-plocm}</comment>
  </data>
  <data name="AppShortNamePre" xml:space="preserve">
    <value>Command Palette Preview</value>
    <comment>{Locked=qps-ploc,qps-ploca,qps-plocm}</comment>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>The Windows Command Palette</value>
  </data>
  <data name="AppDescriptionDev" xml:space="preserve">
    <value>A dev build of the Command Palette</value>
    <comment>{Locked} The dev build will never be seen in multiple languages</comment>
  </data>
  <data name="AppDescriptionCan" xml:space="preserve">
    <value>The Windows Command Palette (Canary build)</value>
    <comment>{Locked}</comment>
  </data>
  <data name="AppDescriptionPre" xml:space="preserve">
    <value>The Windows Command Palette (Preview build)</value>
  </data>
  <data name="StartupTaskName" xml:space="preserve">
    <value>Command Palette</value>
    <comment>{Locked=qps-ploc,qps-ploca,qps-plocm}</comment>
  </data>
  <data name="StartupTaskNameDev" xml:space="preserve">
    <value>Command Palette Dev</value>
    <comment>{Locked} The dev build will never be seen in multiple languages</comment>
  </data>
  <data name="Activation_Shortcut_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Activation_Shortcut_Description" xml:space="preserve">
    <value>Press a combination of keys to change this shortcut</value>
  </data>
  <data name="Activation_Shortcut_With_Disable_Description" xml:space="preserve">
    <value>Press a combination of keys to change this shortcut.
Right-click to remove the key combination, thereby deactivating the shortcut.</value>
  </data>
  <data name="Activation_Shortcut_Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Activation_Shortcut_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Activation_Shortcut_Title" xml:space="preserve">
    <value>Activation shortcut</value>
  </data>
  <data name="InvalidShortcut.Title" xml:space="preserve">
    <value>Invalid shortcut</value>
  </data>
  <data name="InvalidShortcutWarningLabel.Text" xml:space="preserve">
    <value>Only shortcuts that start with **Windows key**, **Ctrl**, **Alt** or **Shift** are valid.</value>
    <comment>The ** sequences are used for text formatting of the key names. Don't remove them on translation.</comment>
  </data>
  <data name="WarningShortcutAltGr.Title" xml:space="preserve">
    <value>Possible shortcut interference with Alt Gr</value>
    <comment>Alt Gr refers to the right alt key on some international keyboards</comment>
  </data>
  <data name="WarningShortcutAltGr.ToolTipService.ToolTip" xml:space="preserve">
    <value>Shortcuts with **Ctrl** and **Alt** may remove functionality from some international keyboards, because **Ctrl** + **Alt** = **Alt Gr** in those keyboards.</value>
    <comment>The ** sequences are used for text formatting of the key names. Don't remove them on translation.</comment>
  </data>
  <data name="CmdPalSettingsHeader.Text" xml:space="preserve">
    <value>Command Palette settings</value>
    <comment>A section header for app-wide settings. "Command Palette" is the name of the app.</comment>
  </data>
  <data name="AboutSettingsHeader.Text" xml:space="preserve">
    <value>About</value>
    <comment>A section header for information about the app</comment>
  </data>
  <data name="ExtensionAboutHeader.Text" xml:space="preserve">
    <value>About</value>
    <comment>A section header for information about the app</comment>
  </data>
  <data name="ExtensionSettingsHeader.Text" xml:space="preserve">
    <value>Extension settings</value>
    <comment>A section header for extension-specific settings.</comment>
  </data>
  <data name="ExtensionCommandsHeader.Text" xml:space="preserve">
    <value>Commands</value>
    <comment>A section header for information about the app</comment>
  </data>
  <data name="SettingsWindowTitle" xml:space="preserve">
    <value>Command Palette Settings</value>
    <comment>The title of the settings window for the app</comment>
  </data>
  <data name="ToastWindowTitle" xml:space="preserve">
    <value>Command Palette Toast</value>
    <comment>The title of the toast window for the command palette</comment>
  </data>
  <data name="DefaultSearchPlaceholderText" xml:space="preserve">
    <value>Type here to search...</value>
  </data>
  <data name="Run_PositionHeader.Header" xml:space="preserve">
    <value>Preferred monitor position</value>
    <comment>as in Show Command Palette on primary monitor</comment>
  </data>
  <data name="Run_PositionHeader.Description" xml:space="preserve">
    <value>If multiple monitors are in use, Command Palette can be launched on the desired monitor</value>
    <comment>as in Show Command Palette on primary monitor</comment>
  </data>
  <data name="Run_Radio_Position_Cursor.Content" xml:space="preserve">
    <value>Monitor with mouse cursor</value>
  </data>
  <data name="Run_Radio_Position_Focus.Content" xml:space="preserve">
    <value>Monitor with focused window</value>
  </data>
  <data name="Run_Radio_Position_Primary_Monitor.Content" xml:space="preserve">
    <value>Primary monitor</value>
  </data>
  <data name="Run_Radio_Position_In_Place.Content" xml:space="preserve">
    <value>Don't move</value>
  </data>
  <data name="ConfirmationDialog_ConfirmButtonText" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmationDialog_CancelButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
</root>