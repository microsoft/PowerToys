<Project Sdk="Microsoft.NET.Sdk">
  <!-- Look at Directory.Build.props in root for common stuff as well -->
  <Import Project="..\..\..\Common.Dotnet.CsWinRT.props" />
  <Import Project="..\..\..\Common.SelfContained.props" />

  <PropertyGroup>
    <AssemblyTitle>PowerToys.FileLocksmith</AssemblyTitle>
    <AssemblyDescription>PowerToys File Locksmith</AssemblyDescription>
    <OutputType>WinExe</OutputType>
    <OutputPath>..\..\..\..\$(Platform)\$(Configuration)\WinUI3Apps</OutputPath>
    <RootNamespace>PowerToys.FileLocksmithUI</RootNamespace>
    <AssemblyName>PowerToys.FileLocksmithUI</AssemblyName>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <UseWinUI>true</UseWinUI>
    <GenerateSatelliteAssembliesForCore>true</GenerateSatelliteAssembliesForCore>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    <EnablePreviewMsixTooling>true</EnablePreviewMsixTooling>
    <WindowsPackageType>None</WindowsPackageType>
    <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
    <ApplicationIcon>Assets/FileLocksmith/Icon.ico</ApplicationIcon>
    <!-- MRT from windows app sdk will search for a pri file with the same name of the module before defaulting to resources.pri -->
    <ProjectPriFileName>PowerToys.FileLocksmithUI.pri</ProjectPriFileName>
  </PropertyGroup>

  <ItemGroup>
    <Page Remove="FileLocksmithXAML\App.xaml" />
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include="FileLocksmithXAML\App.xaml" />
  </ItemGroup>

  <PropertyGroup>
    <NoWarn>0436</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="Assets\FileLocksmith\Icon.ico" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="Assets\FileLocksmith\AppList.scale-100.png" />
    <None Remove="Assets\FileLocksmith\AppList.scale-125.png" />
    <None Remove="Assets\FileLocksmith\AppList.scale-150.png" />
    <None Remove="Assets\FileLocksmith\AppList.scale-200.png" />
    <None Remove="Assets\FileLocksmith\AppList.scale-400.png" />
  </ItemGroup>

  <!-- See https://learn.microsoft.com/windows/apps/develop/platform/csharp-winrt/net-projection-from-cppwinrt-component for more info -->
  <PropertyGroup>
    <CsWinRTIncludes>PowerToys.GPOWrapper;PowerToys.FileLocksmithLib.Interop</CsWinRTIncludes>
    <CsWinRTGeneratedFilesDir>$(OutDir)</CsWinRTGeneratedFilesDir>
    <ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="CommunityToolkit.WinUI.Controls.SettingsControls" />
    <PackageReference Include="CommunityToolkit.WinUI.Converters" />
    <PackageReference Include="CommunityToolkit.WinUI.Extensions" />
    <PackageReference Include="CommunityToolkit.Mvvm" />
    <PackageReference Include="Microsoft.WindowsAppSDK" />
    <PackageReference Include="Microsoft.Xaml.Behaviors.WinUI.Managed" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" />
    <PackageReference Include="System.Drawing.Common" />
    <PackageReference Include="WinUIEx" />
    <!-- This line forces the WebView2 version used by Windows App SDK to be the one we expect from Directory.Packages.props . -->
    <PackageReference Include="Microsoft.Web.WebView2" />
    <!-- HACK: CmdPal uses CommunityToolkit.Common directly. Align the version. -->
    <PackageReference Include="CommunityToolkit.Common" />
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>

  <!-- Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
       Tools extension to be activated for this project even if the Windows App SDK Nuget
       package has not yet been restored -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnablePreviewMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>
  <ItemGroup>
    <!-- HACK: Common.UI is referenced, even if it is not used, to force dll versions to be the same as in other projects that use it. It's still unclear why this is the case, but this is need for flattening the install directory. -->
    <ProjectReference Include="..\..\..\common\Common.UI\Common.UI.csproj" />
    <ProjectReference Include="..\..\..\common\GPOWrapper\GPOWrapper.vcxproj" />
    <ProjectReference Include="..\..\..\common\interop\PowerToys.Interop.vcxproj" />
    <ProjectReference Include="..\..\..\common\ManagedCommon\ManagedCommon.csproj" />
    <ProjectReference Include="..\FileLocksmithLibInterop\FileLocksmithLibInterop.vcxproj" />
  </ItemGroup>
</Project>
