<Project Sdk="Microsoft.NET.Sdk">
  <!-- Look at Directory.Build.props in root for common stuff as well -->
  <Import Project="..\..\..\Common.Dotnet.CsWinRT.props" />
  <Import Project="..\..\..\Common.SelfContained.props" />

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <RootNamespace>ShortcutGuide</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <UseWinUI>true</UseWinUI>
    <EnablePreviewMsixTooling>true</EnablePreviewMsixTooling>
    <WindowsPackageType>None</WindowsPackageType>
    <Nullable>enable</Nullable>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
    <OutputPath>..\..\..\..\$(Platform)\$(Configuration)\WinUI3Apps</OutputPath>
    <AssemblyName>PowerToys.ShortcutGuide</AssemblyName>
    <DefineConstants>DISABLE_XAML_GENERATED_MAIN,TRACE</DefineConstants>
    <ApplicationIcon>Assets\ShortcutGuide\ShortcutGuide.ico</ApplicationIcon>
    <!-- MRT from windows app sdk will search for a pri file with the same name of the module before defaulting to resources.pri -->
    <ProjectPriFileName>PowerToys.ShortcutGuide.pri</ProjectPriFileName>
  </PropertyGroup>

  <ItemGroup>
    <Content Remove="Assets\CopilotKey.png" />
    <Content Remove="Assets\ShortcutGuide\+WindowsNT.Shell.en-US.yml" />
    <Content Remove="Assets\ShortcutGuide\+WindowsNT.WindowsExplorer.en-US.yml" />
    <Content Remove="Assets\ShortcutGuide\HeroImage.png" />
    <Content Remove="Assets\ShortcutGuide\Microsoft.PowerToys.en-US.yml" />
    <Content Remove="Assets\ShortcutGuide\OfficeKey.png" />
    <Content Remove="Assets\ShortcutGuide\ShortcutGuide.ico" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ShortcutGuideXAML\CustomNavigationViewStyle.xaml" />
    <None Remove="ShortcutGuideXAML\Pages\ShortcutsPage.xaml" />
    <None Remove="ShortcutGuideXAML\TaskbarIndicator.xaml" />
    <None Remove="ShortcutGuideXAML\TaskbarWindow.xaml" />
    <None Include="Assets\ShortcutGuide\*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="CopyPRIFileToOutputDir" AfterTargets="Build">
    <Message Text="Executing CopyPRIFileToOutputDir task" Importance="High" />

    <ItemGroup>
      <PRIFile Include="$(OutDir)**\PowerToys.ShortcutGuide.pri" />
    </ItemGroup>

    <Copy SourceFiles="@(PRIFile)" DestinationFolder="$(OutDir)" />

    <Message Text="Copied CopyPRIFileToOutputDir files" Importance="High" />
  </Target>

  <ItemGroup>
    <Page Remove="ShortcutGuideXAML\App.xaml" />
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include="ShortcutGuideXAML\App.xaml" />
  </ItemGroup>
  <ItemGroup>
    <COMReference Include="UIAutomationClient">
      <WrapperTool>tlbimp</WrapperTool>
      <VersionMinor>0</VersionMinor>
      <VersionMajor>1</VersionMajor>
      <Guid>944de083-8fb8-45cf-bcb7-c477acb2f897</Guid>
      <Lcid>0</Lcid>
      <Isolated>false</Isolated>
      <EmbedInteropTypes>true</EmbedInteropTypes>
    </COMReference>
  </ItemGroup>

  <!-- See https://learn.microsoft.com/windows/apps/develop/platform/csharp-winrt/net-projection-from-cppwinrt-component for more info -->
  <PropertyGroup>
    <CsWinRTIncludes>PowerToys.GPOWrapper</CsWinRTIncludes>
    <CsWinRTGeneratedFilesDir>$(OutDir)</CsWinRTGeneratedFilesDir>
    <ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Hosting" />
    <PackageReference Include="Microsoft.WindowsAppSDK" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" />
	<PackageReference Include="CommunityToolkit.WinUI.Animations" />
	<PackageReference Include="CommunityToolkit.WinUI.Converters" />
    <PackageReference Include="WinUIEx" />
    <!-- HACK: To make sure the version pulled in by Microsoft.Extensions.Hosting is current. -->
    <PackageReference Include="System.Text.Json" />
    <PackageReference Include="YamlDotNet" />
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>

  <!-- 
    Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
    Tools extension to be activated for this project even if the Windows App SDK Nuget
    package has not yet been restored.
  -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\common\Common.UI\Common.UI.csproj" />
    <ProjectReference Include="..\..\..\common\GPOWrapper\GPOWrapper.vcxproj" />
    <ProjectReference Include="..\..\..\common\ManagedCommon\ManagedCommon.csproj" />
    <ProjectReference Include="..\..\..\settings-ui\Settings.UI.Library\Settings.UI.Library.csproj" />
    <ProjectReference Include="..\ShortcutGuide.CPPProject\ShortcutGuide.CPPProject.vcxproj" />
  </ItemGroup>
  <ItemGroup>
    <Page Update="ShortcutGuideXAML\Pages\OverviewPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="ShortcutGuideXAML\CustomNavigationViewStyle.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="ShortcutGuideXAML\TaskbarWindow.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="ShortcutGuideXAML\TaskbarIndicator.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="ShortcutGuideXAML\Pages\ShortcutsPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Folder Include="ShortcutGuideXAML\Styles\" />
  </ItemGroup>
  <!-- 
    Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution 
    Explorer "Package and Publish" context menu entry to be enabled for this project even if 
    the Windows App SDK Nuget package has not yet been restored.
  -->
  <PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
  </PropertyGroup>
</Project>
